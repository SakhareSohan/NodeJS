Normalization is a process in database design that organizes columns (attributes) and tables (relations) to minimize redundancy and dependency. It divides large tables into smaller tables and defines relationships among them. The goal is to isolate data so that additions, deletions, and modifications of a field can be made in just one table and then propagated through the rest of the database via defined relationships.

First Normal Form (1NF)
Objective: Ensure that each column contains atomic (indivisible) values and that each column contains values of a single type.
_____________________________________________________________________________________________________________________

Steps to Achieve 1NF:

> Eliminate repeating groups: Ensure that each table cell contains only one value.
> Create separate tables for each group of related data: Separate the data into distinct tables.
> Identify each set of related data with a primary key: Use a unique identifier (primary key) for each table.
_____________________________________________________________________________________________________________________
Example and Challenges:

Non-Normalized Table:

CREATE TABLE students (
    student_id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(100) NOT NULL,
    phone_numbers INT[] NOT NULL,  -- Multi-valued attribute
    courses INT[] NOT NULL  -- Multi-valued attribute
);
_____________________________________________________________________________________________________________________

1NF:

-- Students table without multi-valued attributes
CREATE TABLE students (
    student_id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(100) NOT NULL
);

-- Student phone numbers in a separate table
CREATE TABLE student_phone_numbers (
    phone_number_id SERIAL PRIMARY KEY,
    student_id INT REFERENCES students(student_id),
    phone_number BIGINT NOT NULL
);

-- Enrollments in a separate table
CREATE TABLE enrollments (
    enrollment_id SERIAL PRIMARY KEY,
    student_id INT REFERENCES students(student_id),
    course_id INT NOT NULL,
    enrollment_date DATE NOT NULL
);

_____________________________________________________________________________________________________________________